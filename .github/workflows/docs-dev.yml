---
# SPDX-FileCopyrightText: GitHub, Inc. and contributors
# SPDX-License-Identifier: MIT

name: "dev docs"

on: # yamllint disable-line rule:truthy
  push:
    branches: [main, develop, release]
    paths:
      - docs/**
      - mkdocs.yml
      - pyproject.toml
      - .github/workflows/docs-dev.yml

  pull_request:
    types: [closed]

concurrency:
  group: docs-deploy

env:
  FORCE_COLOR: "1"

jobs:
  build-docs:
    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: "ðŸ§° Checkout Source Code"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: "Set up Python"
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          # Read python version from a file .python-version
          python-version-file: ".python-version"
          check-latest: true
          cache: pip

      - name: "Ensure latest pip"
        run: python -m pip install --upgrade pip

      - name: "Install Hatch"
        run: pip install --upgrade hatch

      - name: "Configure Git for GitHub Actions bot"
        run: |
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'

      - name: "Build documentation"
        run: hatch -v run docs:build-check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN_MKDOCS_MATERIAL_INSIDERS: ${{ secrets.GH_TOKEN_MKDOCS_MATERIAL_INSIDERS }}

      - name: "Commit documentation"
        run: hatch -v run docs:ci-build dev
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN_MKDOCS_MATERIAL_INSIDERS: ${{ secrets.GH_TOKEN_MKDOCS_MATERIAL_INSIDERS }}

      - name: "Create archive"
        run: git archive -o site.zip gh-pages

      - uses: actions/upload-artifact@e63ea677fb182f6827027a7b74f61debfca990ab # v4.3.3
        with:
          name: documentation
          path: site.zip

  publish:
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs:
      - build-docs

    steps:
      - name: "Download Articfact"
        uses: actions/download-artifact@c13dba102f4bb92b3f679fa086db9e2973960ca7 # v4.1.7
        with:
          name: documentation

      - name: "Unpack archive"
        run: python -m zipfile -e site.zip site

      - uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v 4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site
          commit_message: ${{ github.event.head_commit.message }}
          # Write .nojekyll at the root, see:
          # https://help.github.com/en/github/working-with-github-pages/about-github-pages#static-site-generators
          enable_jekyll: false
          # Only deploy if there were changes
          allow_empty_commit: false
