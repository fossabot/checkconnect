[tool.poetry]
name = "test-connections"
version = "0.1.0"
description = "Check websites and ntp-server of exists or connectivitiv"
authors = [
    "Jürgen Mülbert <juergen.muelbert@gmail.com>"]
license = "EUPL-1.2"
readme = "README.md"
homepage = "https://github.com/jmuelbert/test-connections"
repository = "https://github.com/jmuelbert/test-connections"
documentation = "https://test-connections.readthedocs.io"
packages = [{include = "test_connections", from="src"},
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: EUPL V1.2 License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Testing",
]

keywords = [
    "",
]

[tools.poetry.urls]
Changelog = "https://github.com/jmuelbert/test-connections/releases"
"Bug Tracker" = "https//github.com/jmuelbert/test-connections/issues"

[tool.poetry.dependencies]
python = "^3.8"
click = ">=8.0.1"
xdoctest = "^1.1.1"

[tool.poetry.group.dev.dependencies]
furo = ">=2021.11.12"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
pre-commit = "^3.3.1"
pyrsistent = "^0.19.3"
pytest = "^7.3.1"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
tox = "^4.5.1"
vendoring = "^1.2.0"
build = "^0.10.0"
mypy = "^1.3.0"
setuptools = "^67.7.2"
tomli-w = "^1.0.0"
types-jsonschema = "^4.17.0.8"
types-setuptools = "^67.7.0.2"


[tool.poetry.group.devs.dependencies]
myst-parser = "^1.0.0"

[tool.poetry.scripts]
test_connections = "test_connections.__main__:main"

[tool.ruff]
fix = true
unfixable = [
    "ERA",  # do not autoremove commented out code
]
target-version = "py38"
line-length = 88
extend-select = [
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA",  # flake8-eradicate/eradicate
    "PIE",  # flake8-pie
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "N",  # pep8-naming
    "RUF",  # ruff checks
    "UP",  # pyupgrade
    "I",  # isort
    "PGH",  # pygrep
]
ignore = [
    "B904",  # use 'raise ... from err'
    "B905",  # use explicit 'strict=' parameter with 'zip()'
    "N818"  #  Exception name should be named with an Error suffix
]
extend-exclude = [
    "tests/fixtures/*",
    "tests/**/fixtures/*"
]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["poetry.core"]
known-third-party = ["poetry.core._vendor"]
required-imports = ["from __future__ import annotations"]


[tool.black]
line-length = 88
preview = true
include = '\.pyi?$'
extend-exclude = "src/poetry/core/_vendor/*"


[tool.mypy]
strict = true
explicit_package_bases = true
namespace_packages = true
show_error_codes = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
mypy_path = "src"
files = "src, tests"
exclude = "(?x)(^tests/.*/fixtures | ^src/poetry/core/_vendor)"

[[tool.mypy.overrides]]
module = [
  'lark.*',
  'virtualenv.*',
]
ignore_missing_imports = true

[tool.vendoring]
destination = "src/poetry/core/_vendor/"
requirements = "src/poetry/core/_vendor/vendor.txt"
namespace = ""

protected-files = ["vendor.txt"]
patches-dir = "vendors/patches"

[tool.vendoring.transformations]
drop = [
    "bin/",
    "*.so",
    "typing.*",
    "*/tests/"
]

[tool.vendoring.license.fallback-urls]
pyrsistent = "https://raw.githubusercontent.com/tobgu/pyrsistent/master/LICENSE.mit"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
